{
    "coc.preferences.silentAutoupdate": true,
    "coc.preferences.colorSupport": true,
    "coc.preferences.formatOnSaveFiletypes": ["cpp"],

    "suggest.autoTrigger": "always",
    "suggest.triggerAfterInsertEnter": true,
    "diagnostic.displayByAle": false,

    "languageserver": {
        // managed by coc-nvim
        //"clangd": {
        //    "command": "clangd-12",
        //    "filetypes": [
        //        "c",
        //        "cpp"
        //    ],
        //    "rootPatterns": [
        //        "compile_commands.json",
        //        "WORKSPACE",
        //        ".git"
        //    ],
        //    "initializationOptions": {
        //        "clangd.semanticHighlighting": true
        //    },
        //    "args": [
        //        "--compile-commands-dir=build",
        //        "--compile_args_from=filesystem",
        //        "--all-scopes-completion",
        //        "--background-index",
        //        "--clang-tidy",
        //        "--cross-file-rename",
        //        "--completion-parse=always",
        //        "--completion-style=detailed",
        //        "--function-arg-placeholders",
        //        "--header-insertion-decorators",
        //        "--query-driver=/usr/bin/clang-12,/usr/bin/g++",
        //        "--header-insertion=never",
        //        "--suggest-missing-includes",
        //        "--limit-results=0",
        //        "-j=6",
        //        "--pch-storage=memory",
        //        "--log=error",
        //        "--pretty"
        //    ]
        //},
        "haskell": {
            "command": "haskell-language-server-wrapper",
            "args": ["--lsp"],
            "rootPatterns": ["*.cabal", "stack.yaml", "cabal.project", "package.yaml", "hie.yaml"],
            "filetypes": ["haskell", "lhaskell"],
            "initializationOptions": {
                "languageserverHaskell": {
                    "hlintOn": true,
                    "completionSnippetsOn": true
                }
            }

        }

    }
}
